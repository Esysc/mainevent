#!/bin/bash

if [ "$(pgrep -f public/build | wc -w)" != '2' ]; then
  echo "Another instance is already running."
  exit 0;
fi;

APP="$( cd "$( dirname "$0" )" && pwd )/.."
SOURCE=$APP/public
BUILD=$APP/static
BUILD_OLD=$APP/static-old
BUILD_TMP=$APP/static-tmp
MODE=$1

# Clean last build (if still exists due to error).
rm -rf $BUILD_TMP
mkdir $BUILD_TMP

# Compile dust.js templates.
/usr/bin/env node $SOURCE/js/templates.build.js

# Compress app JS.
cp -a $SOURCE/js $BUILD_TMP/js-compressed
if [ "$MODE" == "prod" ]; then
  find $BUILD_TMP/js-compressed -regex ".*\(index\|\(backbone\|collections\|controllers\|helpers\|models\|observers\|shared\|views\)\/\).*js" -exec java -jar $SOURCE/yuicompressor.jar -o {} {} \;
fi

# Combine JS based on configured dependencies.
r.js -o $BUILD_TMP/js-compressed/app.build.js
rm -rf $BUILD_TMP/js-compressed

# Combine and compress CSS.
mkdir $BUILD_TMP/css
cat \
  $SOURCE/css/bootstrap.css \
  $SOURCE/css/jquery-ui.css \
  $SOURCE/css/jquery-ui-timepicker-addon.css \
  $SOURCE/css/jquery.jqplot.css \
  $SOURCE/css/index.css \
  > $BUILD_TMP/css/all.css
if [ "$MODE" == "prod" ]; then
  java -jar $SOURCE/yuicompressor.jar -o $BUILD_TMP/css/all.css $BUILD_TMP/css/all.css
fi

# Copy jquery-ui-timepicker-addon images.
cp -a $SOURCE/css/images $BUILD_TMP/css/

# Copy app/Bootstrap images.
cp -a $SOURCE/img $BUILD_TMP/

# Swap old with new.
if [ -d "$BUILD" ]; then
  mv $BUILD $BUILD_OLD
fi;
mv $BUILD_TMP $BUILD

# Clean up.
rm -f $BUILD/js/app.build.js
rm -f $BUILD/js/templates.build.js
rm -rf $BUILD_OLD
